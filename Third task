import paramiko

# Set up the connection parameters based on your server.
sftp_host = "your.sftp.host"
sftp_port = 22  # or your custom port
sftp_username = "your_username"
sftp_password = "your_password"

# Initialize the SSH client
client = paramiko.SSHClient()

# Automatically add the server's SSH key (unsafe for production, see below)
client.set_missing_host_key_policy(paramiko.AutoAddPolicy())

try:
    # Connect to the SFTP server
    client.connect(sftp_host, port=sftp_port, username=sftp_username, password=sftp_password)
    
    # Open an SFTP session on the SSH server
    sftp = client.open_sftp()
    
    # Navigate to the directory and list files
    sftp.chdir('your/directory/path')
    for filename in sftp.listdir():
        print(filename)
    
    # Close the SFTP session
    sftp.close()

except Exception as e:
    print(f"An error occurred: {e}")

finally:
    # Close the client connection
    client.close()




import pysftp

cnopts = pysftp.CnOpts()
cnopts.hostkeys = None  # Use with caution, disables host key verification

# Define the connection parameters
sftp_host = 'your.sftp.host'
sftp_username = 'your_username'
sftp_password = 'your_password'
remote_path = '/path/to/directory'

# Connect to the SFTP server
with pysftp.Connection(host=sftp_host, username=sftp_username, password=sftp_password, cnopts=cnopts) as sftp:
    # Switch to the remote directory
    sftp.cwd(remote_path)
    
    # List the files in the current directory on the SFTP server
    directory_structure = sftp.listdir_attr()
    
    for attr in directory_structure:
        print(f"Filename: {attr.filename}, Size: {attr.st_size}, Last modified: {attr.st_mtime}")

# Checking for new or modified files would require keeping a record of previous states to compare against.



import paramiko

# Define the connection parameters
sftp_host = 'your.sftp.host'  # Replace with your SFTP host
sftp_port = 22  # Replace with your SFTP port if different
sftp_username = 'your_username'  # Replace with your SFTP username
sftp_password = 'your_password'  # Replace with your SFTP password

# Initialize the SSH client
client = paramiko.SSHClient()

# For security, we use the system host keys. You can also use AutoAddPolicy to accept unknown host keys (not recommended).
client.load_system_host_keys()
client.set_missing_host_key_policy(paramiko.WarningPolicy())

try:
    # Connect to the SFTP server
    client.connect(sftp_host, port=sftp_port, username=sftp_username, password=sftp_password)
    
    # Open an SFTP session on the SSH server
    sftp = client.open_sftp()
    
    # List the files in the current directory on the SFTP server
    print("Listing files in the home directory:")
    for filename in sftp.listdir('.'):
        print(filename)
    
    # Close the SFTP session
    sftp.close()

except paramiko.AuthenticationException:
    print("Authentication failed, please verify your credentials")
except paramiko.SSHException as e:
    print(f"SSH error: {e}")
except Exception as e:
    print(f"An unexpected error occurred: {e}")
finally:
    # Close the client connection
    client.close()
